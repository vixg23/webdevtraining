1. About your experience
-------------------------

Designation - web developer / FE Engineer / FullStack developer
Total years of experience in related field - 6+
Most Recent project - ADP
Type of Team - Agile
Size of the team - 6+ members
Product Name - Payroll management
Product description - Short 30 seconds description
Day to day activites - Develop webpages from wireframes, build components for webpages, Fetch and update  data form/to the server
Web development Technologies used - React, Redux, Javascript(ES6), SCSS for styling, HTML5.
For project management - JIRA, Github

Previous project description - Health care
Web development Technologies used - HTML, CSS, JQuery


2. Team Coding Process
-----------------------

local (5 days)    http://localhost:3000/login.html


commit & push to git
Code Review (Pull request)
Approve and merge to master

(
    git commands
    ------------

    git branch
    git fetch --all
    git checkout <branch_name>
    git checkout -b <new_branch_name>
    git status
    git add <file_path>
    git add .
    git commit -m "<commit_message>"
    git push
    git stash apply
)

environments
------------
dev (6th day)     http://open.spotify.dev.com/login.html
QA/test (7th day) http://open.spotify.qa.com/login.html
UAT               http://open.spotify.uat.com/login.html
live              http://open.spotify.com/login.html (99.6%) Uptime



3. Technical Questions
-----------------------

Javascript
----------

-Diff between primitive and non-primitive datatypes
int, boolean, string

non-primitve/reference datatypes
array, object


- Difference between =, == and ===
= -> Assignment let a = 5;

let x=10, y=10
x==y  true

let x=10, y='10'
x==y  true (No type check is done)


let x=10, y='10'
x===y  false(Type check is done)


(ES6)
JSX -> To return HTML in javascript file
Arrow function shorthand to declare a function

array methods
const myArray = [1, 5, 55, 20, 16, 40, 88, 31];

myArray.filter = return array
myArray.find = return first item that meets the condition
myArray.forEach = loop through each element
myArray.map = loop through each element return an array


const myArray = [1, 5, 55, 20, 16, 40, 88, 31];


// array forEach demo
const result = [];
myArray.forEach((element) => {
    if(element > 20) {
        result.push(element);
    }
});
return result;


// array map demo
const result = myArray.map((element) => {
    if(element>20) {
        return element;
    }
});